{"ast":null,"code":"import * as WeatherForecasts from './WeatherForecasts';\nimport * as Counter from './Counter'; // The top-level state object\n\n// Whenever an action is dispatched, Redux will update each top-level application state property using\n// the reducer with the matching name. It's important that the names match exactly, and that the reducer\n// acts on the corresponding ApplicationState property type.\nexport var reducers = {\n  counter: Counter.reducer,\n  weatherForecasts: WeatherForecasts.reducer\n}; // This type can be used as a hint on action creators so that its 'dispatch' and 'getState' params are\n// correctly typed to match your store.","map":{"version":3,"names":["WeatherForecasts","Counter","reducers","counter","reducer","weatherForecasts"],"sources":["D:/BI Hub/Project1/Project1/ClientApp/src/store/index.ts"],"sourcesContent":["import * as WeatherForecasts from './WeatherForecasts';\r\nimport * as Counter from './Counter';\r\n\r\n// The top-level state object\r\nexport interface ApplicationState {\r\n    counter: Counter.CounterState | undefined;\r\n    weatherForecasts: WeatherForecasts.WeatherForecastsState | undefined;\r\n}\r\n\r\n// Whenever an action is dispatched, Redux will update each top-level application state property using\r\n// the reducer with the matching name. It's important that the names match exactly, and that the reducer\r\n// acts on the corresponding ApplicationState property type.\r\nexport const reducers = {\r\n    counter: Counter.reducer,\r\n    weatherForecasts: WeatherForecasts.reducer\r\n};\r\n\r\n// This type can be used as a hint on action creators so that its 'dispatch' and 'getState' params are\r\n// correctly typed to match your store.\r\nexport interface AppThunkAction<TAction> {\r\n    (dispatch: (action: TAction) => void, getState: () => ApplicationState): void;\r\n}\r\n"],"mappings":"AAAA,OAAO,KAAKA,gBAAZ,MAAkC,oBAAlC;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB,C,CAEA;;AAMA;AACA;AACA;AACA,OAAO,IAAMC,QAAQ,GAAG;EACpBC,OAAO,EAAEF,OAAO,CAACG,OADG;EAEpBC,gBAAgB,EAAEL,gBAAgB,CAACI;AAFf,CAAjB,C,CAKP;AACA"},"metadata":{},"sourceType":"module"}