{"ast":null,"code":"var _jsxFileName = \"D:\\\\BI Hub\\\\Project1\\\\Project1\\\\ClientApp\\\\src\\\\index.tsx\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport configureStore from './store/configureStore';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker'; // Create browser history to use in the Redux store\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\nvar history = createBrowserHistory({\n  basename: baseUrl\n}); // Get the application-wide store instance, prepopulating with state from the server where available.\n\nvar store = configureStore(history);\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(ConnectedRouter, {\n    history: history,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 5\n}, this), document.getElementById('root'));\nregisterServiceWorker();","map":{"version":3,"names":["React","ReactDOM","Provider","ConnectedRouter","createBrowserHistory","configureStore","App","registerServiceWorker","baseUrl","document","getElementsByTagName","getAttribute","history","basename","store","render","getElementById"],"sources":["D:/BI Hub/Project1/Project1/ClientApp/src/index.tsx"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.css';\r\n\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history';\r\nimport configureStore from './store/configureStore';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\n// Create browser history to use in the Redux store\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href') as string;\r\nconst history = createBrowserHistory({ basename: baseUrl });\r\n\r\n// Get the application-wide store instance, prepopulating with state from the server where available.\r\nconst store = configureStore(history);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ConnectedRouter history={history}>\r\n            <App />\r\n        </ConnectedRouter>\r\n    </Provider>,\r\n    document.getElementById('root'));\r\n\r\nregisterServiceWorker();\r\n"],"mappings":";AAAA,OAAO,kCAAP;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,QAAZ,MAA0B,WAA1B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,eAAT,QAAgC,wBAAhC;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC,C,CAEA;;;AACA,IAAMC,OAAO,GAAGC,QAAQ,CAACC,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,YAAzC,CAAsD,MAAtD,CAAhB;AACA,IAAMC,OAAO,GAAGR,oBAAoB,CAAC;EAAES,QAAQ,EAAEL;AAAZ,CAAD,CAApC,C,CAEA;;AACA,IAAMM,KAAK,GAAGT,cAAc,CAACO,OAAD,CAA5B;AAEAX,QAAQ,CAACc,MAAT,eACI,QAAC,QAAD;EAAU,KAAK,EAAED,KAAjB;EAAA,uBACI,QAAC,eAAD;IAAiB,OAAO,EAAEF,OAA1B;IAAA,uBACI,QAAC,GAAD;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA;AADJ;EAAA;EAAA;EAAA;AAAA,QADJ,EAMIH,QAAQ,CAACO,cAAT,CAAwB,MAAxB,CANJ;AAQAT,qBAAqB"},"metadata":{},"sourceType":"module"}